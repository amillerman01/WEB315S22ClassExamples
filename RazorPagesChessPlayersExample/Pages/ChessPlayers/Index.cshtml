@page
@model RazorPagesChessPlayersExample.Pages_ChessPlayers.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<p>
    First chess players name: @Model.ChessPlayer[0].FullName
</p>
<p>
    This is potentially dangerous to do because we can't guarantee tha chessplayer is populated
</p>
<p>
    The random number in our IndexModel value is @Model.SomeValue
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ChessPlayer[0].FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChessPlayer[0].DateOfTitleAcquisition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChessPlayer[0].CurrentTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChessPlayer[0].CurrentRating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ChessPlayer[0].NumberOfTournamentVictories)
            </th>
            <th>Edit/Update/Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ChessPlayer)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                    @* @item.FullName *@
                </td>
                <td>
                    @* Without the @Html.DisplayFor, the date will not obey our rule from the model
                        [DataType(DataType.Date)]
                        Meaning it will display the entire DateTime objects value, rather than just the date *@
                    @Html.DisplayFor(modelItem => item.DateOfTitleAcquisition)
                    @* @item.DateOfTitleAcquisition *@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentRating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfTournamentVictories)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
